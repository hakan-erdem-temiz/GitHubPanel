{"ast":null,"code":"import axios from \"axios\";\nimport logger from \"./logService\";\naxios.defaults.baseURL = \"http://localhost:3900/api\";\naxios.interceptors.response.use(null, function (error) {\n  var expectedError = error.response && error.response.status >= 400 && error.response.status < 500;\n\n  if (!expectedError) {\n    logger.log(error);\n    alert.error(\"An unexpected error occurred.\");\n  }\n\n  return Promise.reject(error);\n});\n\nfunction setJwt(jwt) {\n  axios.defaults.headers.common[\"x-auth-token\"] = jwt;\n}\n\nexport default {\n  get: axios.get,\n  post: axios.post,\n  put: axios.put,\n  delete: axios.delete,\n  setJwt: setJwt\n};","map":{"version":3,"sources":["/Users/hakantemiz/Documents/GitHub/GitPanel/gitpanel/client/src/services/httpService.js"],"names":["axios","logger","defaults","baseURL","interceptors","response","use","error","expectedError","status","log","alert","Promise","reject","setJwt","jwt","headers","common","get","post","put","delete"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,cAAnB;AAEAD,KAAK,CAACE,QAAN,CAAeC,OAAf,GAAyB,2BAAzB;AAEAH,KAAK,CAACI,YAAN,CAAmBC,QAAnB,CAA4BC,GAA5B,CAAgC,IAAhC,EAAsC,UAAAC,KAAK,EAAI;AAC7C,MAAMC,aAAa,GACjBD,KAAK,CAACF,QAAN,IACAE,KAAK,CAACF,QAAN,CAAeI,MAAf,IAAyB,GADzB,IAEAF,KAAK,CAACF,QAAN,CAAeI,MAAf,GAAwB,GAH1B;;AAKA,MAAI,CAACD,aAAL,EAAoB;AAClBP,IAAAA,MAAM,CAACS,GAAP,CAAWH,KAAX;AACAI,IAAAA,KAAK,CAACJ,KAAN,CAAY,+BAAZ;AACD;;AAED,SAAOK,OAAO,CAACC,MAAR,CAAeN,KAAf,CAAP;AACD,CAZD;;AAcA,SAASO,MAAT,CAAgBC,GAAhB,EAAqB;AACnBf,EAAAA,KAAK,CAACE,QAAN,CAAec,OAAf,CAAuBC,MAAvB,CAA8B,cAA9B,IAAgDF,GAAhD;AACD;;AAED,eAAe;AACbG,EAAAA,GAAG,EAAElB,KAAK,CAACkB,GADE;AAEbC,EAAAA,IAAI,EAAEnB,KAAK,CAACmB,IAFC;AAGbC,EAAAA,GAAG,EAAEpB,KAAK,CAACoB,GAHE;AAIbC,EAAAA,MAAM,EAAErB,KAAK,CAACqB,MAJD;AAKbP,EAAAA,MAAM,EAANA;AALa,CAAf","sourcesContent":["import axios from \"axios\";\nimport logger from \"./logService\";\n\naxios.defaults.baseURL = \"http://localhost:3900/api\";\n\naxios.interceptors.response.use(null, error => {\n  const expectedError =\n    error.response &&\n    error.response.status >= 400 &&\n    error.response.status < 500;\n\n  if (!expectedError) {\n    logger.log(error);\n    alert.error(\"An unexpected error occurred.\");\n  }\n\n  return Promise.reject(error);\n});\n\nfunction setJwt(jwt) {\n  axios.defaults.headers.common[\"x-auth-token\"] = jwt;\n}\n\nexport default {\n  get: axios.get,\n  post: axios.post,\n  put: axios.put,\n  delete: axios.delete,\n  setJwt\n};\n"]},"metadata":{},"sourceType":"module"}