{"ast":null,"code":"import _regeneratorRuntime from \"/Users/hakantemiz/Documents/GitHub/GitPanel/gitpanel/client/node_modules/@babel/runtime/regenerator\";\nimport _objectSpread from \"/Users/hakantemiz/Documents/GitHub/GitPanel/gitpanel/client/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _asyncToGenerator from \"/Users/hakantemiz/Documents/GitHub/GitPanel/gitpanel/client/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/Users/hakantemiz/Documents/GitHub/GitPanel/gitpanel/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/hakantemiz/Documents/GitHub/GitPanel/gitpanel/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/hakantemiz/Documents/GitHub/GitPanel/gitpanel/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/hakantemiz/Documents/GitHub/GitPanel/gitpanel/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/hakantemiz/Documents/GitHub/GitPanel/gitpanel/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/hakantemiz/Documents/GitHub/GitPanel/gitpanel/client/src/components/GitConnectionForm.js\";\nimport React from \"react\";\nimport Joi from \"joi-browser\";\nimport Form from \"./common/form\";\nimport auth from \"../services/githubAuthService\";\n\nvar GitConnectionForm =\n/*#__PURE__*/\nfunction (_Form) {\n  _inherits(GitConnectionForm, _Form);\n\n  function GitConnectionForm() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, GitConnectionForm);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(GitConnectionForm)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.username = React.createRef();\n    _this.state = {\n      data: {\n        username: \"\",\n        password: \"\"\n      },\n      errors: {}\n    };\n    _this.doSubmit =\n    /*#__PURE__*/\n    _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee() {\n      var data, state, errors;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              data = _this.state.data;\n              _context.next = 4;\n              return auth.connect();\n\n            case 4:\n              state = _this.props.location.state;\n              window.location = state ? state.from.pathname : \"/\"; //this.props.history.push(\"/\");\n\n              _context.next = 11;\n              break;\n\n            case 8:\n              _context.prev = 8;\n              _context.t0 = _context[\"catch\"](0);\n\n              if (_context.t0.response && _context.t0.response.status === 400) {\n                errors = _objectSpread({}, _this.state.errors);\n                errors.username = _context.t0.response.data;\n\n                _this.setState({\n                  errors: errors\n                });\n              }\n\n            case 11:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[0, 8]]);\n    }));\n    return _this;\n  }\n\n  _createClass(GitConnectionForm, [{\n    key: \"render\",\n    value: function render() {\n      //if (auth.getCurrentUser()) return <Redirect to=\"/\" />;\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        className: \"btn btn-primary\",\n        style: {\n          margin: 10\n        },\n        onClick: this.handleSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }, React.createElement(\"h4\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }, \"Sync Github\")));\n    }\n  }]);\n\n  return GitConnectionForm;\n}(Form);\n\nexport default GitConnectionForm;","map":{"version":3,"sources":["/Users/hakantemiz/Documents/GitHub/GitPanel/gitpanel/client/src/components/GitConnectionForm.js"],"names":["React","Joi","Form","auth","GitConnectionForm","username","createRef","state","data","password","errors","doSubmit","connect","props","location","window","from","pathname","response","status","setState","margin","handleSubmit"],"mappings":";;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,GAAP,MAAgB,aAAhB;AACA,OAAOC,IAAP,MAAiB,eAAjB;AACA,OAAOC,IAAP,MAAiB,+BAAjB;;IAEMC,iB;;;;;;;;;;;;;;;;;UACJC,Q,GAAWL,KAAK,CAACM,SAAN,E;UAEXC,K,GAAQ;AACNC,MAAAA,IAAI,EAAE;AACJH,QAAAA,QAAQ,EAAE,EADN;AAEJI,QAAAA,QAAQ,EAAE;AAFN,OADA;AAKNC,MAAAA,MAAM,EAAE;AALF,K;UAQRC,Q;;;;6BAAW;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAECH,cAAAA,IAFD,GAEU,MAAKD,KAFf,CAECC,IAFD;AAAA;AAAA,qBAGDL,IAAI,CAACS,OAAL,EAHC;;AAAA;AAKCL,cAAAA,KALD,GAKW,MAAKM,KAAL,CAAWC,QALtB,CAKCP,KALD;AAMPQ,cAAAA,MAAM,CAACD,QAAP,GAAkBP,KAAK,GAAGA,KAAK,CAACS,IAAN,CAAWC,QAAd,GAAyB,GAAhD,CANO,CAOP;;AAPO;AAAA;;AAAA;AAAA;AAAA;;AASP,kBAAI,YAAGC,QAAH,IAAe,YAAGA,QAAH,CAAYC,MAAZ,KAAuB,GAA1C,EAA+C;AACvCT,gBAAAA,MADuC,qBACzB,MAAKH,KAAL,CAAWG,MADc;AAE7CA,gBAAAA,MAAM,CAACL,QAAP,GAAkB,YAAGa,QAAH,CAAYV,IAA9B;;AACA,sBAAKY,QAAL,CAAc;AAAEV,kBAAAA,MAAM,EAANA;AAAF,iBAAd;AACD;;AAbM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,K;;;;;;6BAiBF;AACP;AACA,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AACE,QAAA,SAAS,EAAC,iBADZ;AAEE,QAAA,KAAK,EAAE;AAAEW,UAAAA,MAAM,EAAE;AAAV,SAFT;AAGE,QAAA,OAAO,EAAE,KAAKC,YAHhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBALF,CADF,CADF;AAWD;;;;EAzC6BpB,I;;AA4ChC,eAAeE,iBAAf","sourcesContent":["import React from \"react\";\nimport Joi from \"joi-browser\";\nimport Form from \"./common/form\";\nimport auth from \"../services/githubAuthService\";\n\nclass GitConnectionForm extends Form {\n  username = React.createRef();\n\n  state = {\n    data: {\n      username: \"\",\n      password: \"\"\n    },\n    errors: {}\n  };\n\n  doSubmit = async () => {\n    try {\n      const { data } = this.state;\n      await auth.connect();\n\n      const { state } = this.props.location;\n      window.location = state ? state.from.pathname : \"/\";\n      //this.props.history.push(\"/\");\n    } catch (ex) {\n      if (ex.response && ex.response.status === 400) {\n        const errors = { ...this.state.errors };\n        errors.username = ex.response.data;\n        this.setState({ errors });\n      }\n    }\n  };\n\n  render() {\n    //if (auth.getCurrentUser()) return <Redirect to=\"/\" />;\n    return (\n      <div>\n        <button\n          className=\"btn btn-primary\"\n          style={{ margin: 10 }}\n          onClick={this.handleSubmit}\n        >\n          <h4>Sync Github</h4>\n        </button>\n      </div>\n    );\n  }\n}\n\nexport default GitConnectionForm;\n"]},"metadata":{},"sourceType":"module"}