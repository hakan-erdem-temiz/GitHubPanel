{"ast":null,"code":"import _regeneratorRuntime from \"/Users/hakantemiz/Documents/GitHub/GitPanel/gitpanel/client/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/hakantemiz/Documents/GitHub/GitPanel/gitpanel/client/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport http from \"./httpService\";\nimport jwtDecode from \"jwt-decode\";\nvar apiEndpoint = \"/github/gitPanelAuth\";\nvar tokenKey = \"token\";\nhttp.setJwt(getJwt());\nexport function login(_x, _x2) {\n  return _login.apply(this, arguments);\n}\n\nfunction _login() {\n  _login = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee(username, password) {\n    var _ref, jwt;\n\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return http.post(apiEndpoint, {\n              username: username,\n              password: password\n            });\n\n          case 2:\n            _ref = _context.sent;\n            jwt = _ref.data;\n            localStorage.setItem(tokenKey, jwt);\n\n          case 5:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n  return _login.apply(this, arguments);\n}\n\nexport function connect() {\n  return _connect.apply(this, arguments);\n}\n\nfunction _connect() {\n  _connect = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee2() {\n    var _ref2, jwt;\n\n    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.next = 2;\n            return http.get(\"https://github.com/login/oauth/authorize?scope=user:TestUser001info&client_id=1acd98284d275423d24b\");\n\n          case 2:\n            _ref2 = _context2.sent;\n            jwt = _ref2.data;\n            console.log(\"jwt:::\");\n            console.log(jwt);\n\n          case 6:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  }));\n  return _connect.apply(this, arguments);\n}\n\nexport function loginWithJwt(jwt) {\n  localStorage.setItem(tokenKey, jwt);\n}\nexport function logout() {\n  localStorage.removeItem(tokenKey);\n}\nexport function getCurrentUser() {\n  try {\n    var jwt = localStorage.getItem(tokenKey);\n    return jwtDecode(jwt);\n  } catch (ex) {\n    return null;\n  }\n}\nexport function getJwt() {\n  return localStorage.getItem(tokenKey);\n}\nexport default {\n  login: login,\n  connect: connect,\n  loginWithJwt: loginWithJwt,\n  logout: logout,\n  getCurrentUser: getCurrentUser,\n  getJwt: getJwt\n};","map":{"version":3,"sources":["/Users/hakantemiz/Documents/GitHub/GitPanel/gitpanel/client/src/services/githubAuthService.js"],"names":["http","jwtDecode","apiEndpoint","tokenKey","setJwt","getJwt","login","username","password","post","jwt","data","localStorage","setItem","connect","get","console","log","loginWithJwt","logout","removeItem","getCurrentUser","getItem","ex"],"mappings":";;AAAA,OAAOA,IAAP,MAAiB,eAAjB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AAEA,IAAMC,WAAW,GAAG,sBAApB;AACA,IAAMC,QAAQ,GAAG,OAAjB;AAEAH,IAAI,CAACI,MAAL,CAAYC,MAAM,EAAlB;AAEA,gBAAsBC,KAAtB;AAAA;AAAA;;;;;2BAAO,iBAAqBC,QAArB,EAA+BC,QAA/B;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACuBR,IAAI,CAACS,IAAL,CAAUP,WAAV,EAAuB;AAAEK,cAAAA,QAAQ,EAARA,QAAF;AAAYC,cAAAA,QAAQ,EAARA;AAAZ,aAAvB,CADvB;;AAAA;AAAA;AACSE,YAAAA,GADT,QACGC,IADH;AAELC,YAAAA,YAAY,CAACC,OAAb,CAAqBV,QAArB,EAA+BO,GAA/B;;AAFK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G;;;;AAKP,gBAAsBI,OAAtB;AAAA;AAAA;;;;;2BAAO;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACuBd,IAAI,CAACe,GAAL,CAC1B,oGAD0B,CADvB;;AAAA;AAAA;AACSL,YAAAA,GADT,SACGC,IADH;AAILK,YAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ;AACAD,YAAAA,OAAO,CAACC,GAAR,CAAYP,GAAZ;;AALK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G;;;;AAQP,OAAO,SAASQ,YAAT,CAAsBR,GAAtB,EAA2B;AAChCE,EAAAA,YAAY,CAACC,OAAb,CAAqBV,QAArB,EAA+BO,GAA/B;AACD;AAED,OAAO,SAASS,MAAT,GAAkB;AACvBP,EAAAA,YAAY,CAACQ,UAAb,CAAwBjB,QAAxB;AACD;AAED,OAAO,SAASkB,cAAT,GAA0B;AAC/B,MAAI;AACF,QAAMX,GAAG,GAAGE,YAAY,CAACU,OAAb,CAAqBnB,QAArB,CAAZ;AACA,WAAOF,SAAS,CAACS,GAAD,CAAhB;AACD,GAHD,CAGE,OAAOa,EAAP,EAAW;AACX,WAAO,IAAP;AACD;AACF;AAED,OAAO,SAASlB,MAAT,GAAkB;AACvB,SAAOO,YAAY,CAACU,OAAb,CAAqBnB,QAArB,CAAP;AACD;AAED,eAAe;AACbG,EAAAA,KAAK,EAALA,KADa;AAEbQ,EAAAA,OAAO,EAAPA,OAFa;AAGbI,EAAAA,YAAY,EAAZA,YAHa;AAIbC,EAAAA,MAAM,EAANA,MAJa;AAKbE,EAAAA,cAAc,EAAdA,cALa;AAMbhB,EAAAA,MAAM,EAANA;AANa,CAAf","sourcesContent":["import http from \"./httpService\";\nimport jwtDecode from \"jwt-decode\";\n\nconst apiEndpoint = \"/github/gitPanelAuth\";\nconst tokenKey = \"token\";\n\nhttp.setJwt(getJwt());\n\nexport async function login(username, password) {\n  const { data: jwt } = await http.post(apiEndpoint, { username, password });\n  localStorage.setItem(tokenKey, jwt);\n}\n\nexport async function connect() {\n  const { data: jwt } = await http.get(\n    \"https://github.com/login/oauth/authorize?scope=user:TestUser001info&client_id=1acd98284d275423d24b\"\n  );\n  console.log(\"jwt:::\");\n  console.log(jwt);\n}\n\nexport function loginWithJwt(jwt) {\n  localStorage.setItem(tokenKey, jwt);\n}\n\nexport function logout() {\n  localStorage.removeItem(tokenKey);\n}\n\nexport function getCurrentUser() {\n  try {\n    const jwt = localStorage.getItem(tokenKey);\n    return jwtDecode(jwt);\n  } catch (ex) {\n    return null;\n  }\n}\n\nexport function getJwt() {\n  return localStorage.getItem(tokenKey);\n}\n\nexport default {\n  login,\n  connect,\n  loginWithJwt,\n  logout,\n  getCurrentUser,\n  getJwt\n};\n"]},"metadata":{},"sourceType":"module"}